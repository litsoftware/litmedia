// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AppsColumns holds the columns for the "apps" table.
	AppsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "delete_at", Type: field.TypeTime, Nullable: true},
		{Name: "operator_id", Type: field.TypeInt, Nullable: true},
		{Name: "encrypted_operator_rsa_public_key", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "encrypted_app_private_key", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "encrypted_app_public_key", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "title", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "conf", Type: field.TypeString, Nullable: true, Default: "general"},
		{Name: "app_id", Type: field.TypeString, Nullable: true},
		{Name: "app_secret", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeInt, Nullable: true, Default: 1},
		{Name: "ip_whitelist", Type: field.TypeJSON, Nullable: true},
	}
	// AppsTable holds the schema information for the "apps" table.
	AppsTable = &schema.Table{
		Name:       "apps",
		Columns:    AppsColumns,
		PrimaryKey: []*schema.Column{AppsColumns[0]},
	}
	// MediasColumns holds the columns for the "medias" table.
	MediasColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "delete_at", Type: field.TypeTime, Nullable: true},
		{Name: "hash", Type: field.TypeString, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
		{Name: "app_id", Type: field.TypeInt, Nullable: true},
		{Name: "sn", Type: field.TypeString, Nullable: true},
		{Name: "org_file_name", Type: field.TypeString},
		{Name: "file_name", Type: field.TypeString},
		{Name: "size", Type: field.TypeJSON, Nullable: true},
		{Name: "mime", Type: field.TypeString, Nullable: true},
		{Name: "ext", Type: field.TypeString, Nullable: true},
		{Name: "ref_count", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "level", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "type", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "status", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "reason_type", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "save_path", Type: field.TypeString, Nullable: true},
		{Name: "full_path", Type: field.TypeString, Nullable: true},
		{Name: "is_encrypted", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "reason", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "out_user_id", Type: field.TypeInt64, Nullable: true},
		{Name: "company_id", Type: field.TypeInt64, Nullable: true},
	}
	// MediasTable holds the schema information for the "medias" table.
	MediasTable = &schema.Table{
		Name:       "medias",
		Columns:    MediasColumns,
		PrimaryKey: []*schema.Column{MediasColumns[0]},
	}
	// OperatorsColumns holds the columns for the "operators" table.
	OperatorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "delete_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "password", Type: field.TypeString},
		{Name: "nickname", Type: field.TypeString, Nullable: true},
		{Name: "phone", Type: field.TypeString, Unique: true},
		{Name: "avatar", Type: field.TypeString, Nullable: true},
		{Name: "remember_token", Type: field.TypeString, Nullable: true},
	}
	// OperatorsTable holds the schema information for the "operators" table.
	OperatorsTable = &schema.Table{
		Name:       "operators",
		Columns:    OperatorsColumns,
		PrimaryKey: []*schema.Column{OperatorsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "delete_at", Type: field.TypeTime, Nullable: true},
		{Name: "company_id", Type: field.TypeInt, Nullable: true},
		{Name: "app_id", Type: field.TypeInt, Nullable: true},
		{Name: "out_user_id", Type: field.TypeInt, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "nickname", Type: field.TypeString, Nullable: true},
		{Name: "phone", Type: field.TypeString, Unique: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AppsTable,
		MediasTable,
		OperatorsTable,
		UsersTable,
	}
)

func init() {
	AppsTable.Annotation = &entsql.Annotation{
		Table: "apps",
	}
	MediasTable.Annotation = &entsql.Annotation{
		Table: "medias",
	}
	OperatorsTable.Annotation = &entsql.Annotation{
		Table: "operators",
	}
	UsersTable.Annotation = &entsql.Annotation{
		Table: "users",
	}
}
